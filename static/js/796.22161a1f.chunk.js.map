{"version":3,"file":"static/js/796.22161a1f.chunk.js","mappings":"+NACA,EAA2B,8BAA3B,EAAkE,4BAAlE,EAAwG,6BAAxG,EAA8I,4BAA9I,EAAiL,0B,SCwCjL,MAnCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GACdO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,QAApB,IACTC,MAAMC,QAAQC,MAClB,GAAE,CAACZ,IAECG,EAAQU,QASX,eAAIC,UAAWC,EAAf,SACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,GAAhC,OACX,yBACE,iBAAKN,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAjB,qBAAoCE,MACpC,0BAAO,IAAII,KAAKF,GAAYG,2BAE9B,uBAAIJ,QANCE,EADE,OARb,gBAAKN,UAAWC,EAAhB,gEAqBL,C,4PCrCKQ,EAAW,gCACXC,EAAU,mCACHC,EAAiB,kCAEjBC,EAAgB,mCAAG,+GAELC,IAAAA,IAAA,UAClBJ,EADkB,sCACoBC,IAHf,uBAEpBI,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BjB,QAAQC,MAAM,6BAPc,yDAAH,qDAWhBiB,EAAc,mCAAG,WAAMC,GAAN,kGAEHH,IAAAA,IAAA,UAClBJ,EADkB,gCACcC,EADd,kBAC+BM,IAH5B,uBAElBF,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BjB,QAAQC,MAAM,6BAPY,yDAAH,sDAWdmB,EAAY,mCAAG,WAAMC,GAAN,kGAEDL,IAAAA,IAAA,UAClBJ,EADkB,kBACAS,EADA,oBACkBR,IAHjB,uBAEhBI,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBjB,QAAQC,MAAM,6BAPU,yDAAH,sDAsBZqB,EAAgB,SAAAC,GAC3B,OAAKA,EAGaA,EAAOlB,KAAI,qBAAGmB,IAAH,IACVC,KAAK,MAHf,EAIV,EAEYC,EAAa,mCAAG,WAAML,GAAN,kGAEFL,IAAAA,IAAA,UAClBJ,EADkB,iBACDS,EADC,4BACyBR,IAHvB,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,gCAOzBjB,QAAQC,MAAM,6BAPW,yDAAH,sDAWbN,EAAgB,mCAAG,WAAM0B,GAAN,kGAELL,IAAAA,IAAA,UAClBJ,EADkB,iBACDS,EADC,4BACyBR,IAHpB,uBAEpBI,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BjB,QAAQC,MAAM,6BAPc,yDAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/ReviewsPage/ReviewsPage.module.css?a93a","pages/MovieDetails/ReviewsPage/ReviewsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"notFound\":\"ReviewsPage_notFound__N557Z\",\"parent\":\"ReviewsPage_parent__E6OWI\",\"wrapper\":\"ReviewsPage_wrapper__Zyy0t\",\"author\":\"ReviewsPage_author__Q3XsV\",\"list\":\"ReviewsPage_list__jVnU1\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsOfFilm } from '../../../services/api';\nimport s from './ReviewsPage.module.css';\n\nfunction ReviewsPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviewsOfFilm(movieId)\n      .then(resp => setReviews(resp.results))\n      .catch(console.error);\n  }, [movieId]);\n\n  if (!reviews.length) {\n    return (\n      <div className={s.notFound}>\n        Sorry, we haven't any reviews about this films yet.\n      </div>\n    );\n  }\n\n  return (\n    <ul className={s.list}>\n      {reviews.map(({ author, content, created_at, id }) => (\n        <li key={id}>\n          <div className={s.parent}>\n            <div className={s.wrapper}>\n              <span className={s.author}>Author: {author}</span>\n              <span>{new Date(created_at).toLocaleDateString()}</span>\n            </div>\n            <p>{content}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a4a0d478f5a66be1befa7af60710d15f';\nexport const POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByName = async filmName => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${filmName}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByID = async filmId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenres = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}genre/movie/list?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenresName = genres => {\n  if (!genres) {\n    return '';\n  }\n  let genresNames = genres.map(({ name }) => name);\n  return genresNames.join(', ');\n};\n\nexport const getCastOfFilm = async filmId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getReviewsOfFilm = async filmId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviewsOfFilm","then","resp","results","catch","console","error","length","className","s","map","author","content","created_at","id","Date","toLocaleDateString","BASE_URL","API_KEY","POSTER_IMG_URL","getTrendingFilms","axios","data","getFilmsByName","filmName","getFilmsByID","filmId","getGenresName","genres","name","join","getCastOfFilm"],"sourceRoot":""}