{"version":3,"file":"static/js/991.fe3dd2dc.chunk.js","mappings":"8NACA,GAAgB,KAAO,uBAAuB,MAAQ,wBAAwB,SAAW,2BAA2B,KAAO,uBAAuB,UAAY,6B,SCqC9J,MAhCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAIH,GACZ,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcR,GACXS,MAAK,SAAAC,GAAI,OACRJ,EAAQI,EAAKL,KADL,IAGTM,MAAMT,QAAQU,MAClB,GAAE,CAAEZ,IAEAK,EAAKQ,QAKR,eAAIC,UAAWC,EAAAA,KAAf,SACGV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACR,eAAaN,UAAWC,EAAAA,KAAxB,UACE,4BACE,gBAAKD,UAAWC,EAAAA,MAASM,IAAG,UAAKC,EAAAA,GAAL,YAAuBL,GAAgBM,IAAKL,KACxE,eAAIJ,UAAWC,EAAAA,KAAf,SAAwBG,GAAQ,aAChC,0BAAG,iBAAMJ,UAAWC,EAAAA,UAAjB,wBAAH,IAAoDI,GAAa,iBAJ5DC,EADD,OALL,gBAAKN,UAAWC,EAAAA,SAAhB,gDAgBV,C,4PClCKS,EAAW,gCACXC,EAAU,mCACHH,EAAiB,kCAGjBI,EAAgB,mCAAG,+GAELC,IAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAHf,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5B1B,QAAQU,MAAM,6BAPc,yDAAH,qDAWhBiB,EAAc,mCAAG,WAAMC,GAAN,kGAEHH,IAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BK,IAH5B,uBAElBF,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1B1B,QAAQU,MAAM,6BAPY,yDAAH,sDAWdmB,EAAY,mCAAG,WAAMC,GAAN,kGAEDL,IAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACkBP,IAHjB,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxB1B,QAAQU,MAAM,6BAPU,yDAAH,sDAsBZqB,EAAgB,SAAAC,GAC3B,OAAKA,EAGaA,EAAOlB,KAAI,qBAAGE,IAAH,IACViB,KAAK,MAHf,EAIV,EAEY3B,EAAa,mCAAG,WAAMwB,GAAN,kGAEFL,IAAAA,IAAA,UAAaH,EAAb,iBAA8BQ,EAA9B,4BAAwDP,IAFtD,uBAEjBG,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzB1B,QAAQU,MAAM,6BALW,yDAAH,sDASbwB,EAAgB,mCAAG,WAAOJ,GAAP,kGAELL,IAAAA,IAAA,UAAaH,EAAb,iBAA8BQ,EAA9B,4BAAwDP,IAFnD,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,gCAK5B1B,QAAQU,MAAM,6BALc,yDAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/CastPage/CastPage.module.css?4cef","pages/MovieDetails/CastPage/CastPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastPage_list__qvyn7\",\"photo\":\"CastPage_photo__02bvg\",\"notFount\":\"CastPage_notFount__XxF5T\",\"name\":\"CastPage_name__oy7IM\",\"character\":\"CastPage_character__Wf43Q\"};","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport {  useParams } from 'react-router-dom';\nimport { getCastOfFilm, POSTER_IMG_URL } from '../../../services/api';\nimport s from './CastPage.module.css';\n\nfunction CastPage() {\n  const { movieId } = useParams();\n  console.log(movieId);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCastOfFilm(movieId)\n      .then(resp =>\n        setCast(resp.cast)\n      )\n      .catch(console.error);\n  }, [ movieId]);\n\n  if (!cast.length) {\n    return <div className={s.notFount}>Sorry, there are no info about cast</div>;\n  }\n\n  return (\n    <ul className={s.list}>\n      {cast.map(({ profile_path, name, character, id }) => (\n        <li key={id} className={s.item}>\n          <div>\n            <img className={s.photo} src={`${POSTER_IMG_URL}/${profile_path}`} alt={name} />\n            <h2 className={s.name}>{name || 'No info'}</h2>\n            <p><span className={s.character}>Character:</span> {character || 'No info'}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a4a0d478f5a66be1befa7af60710d15f';\nexport const POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport const getTrendingFilms = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByName = async filmName => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${filmName}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByID = async filmId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenres = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}genre/movie/list?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenresName = genres => {\n  if (!genres) {\n    return '';\n  }\n  let genresNames = genres.map(({ name }) => name);\n  return genresNames.join(', ');\n};\n\nexport const getCastOfFilm = async filmId => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getReviewsOfFilm = async (filmId)=>{\n  try {\n    const { data } = await axios.get(`${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n}\n"],"names":["movieId","useParams","console","log","useState","cast","setCast","useEffect","getCastOfFilm","then","resp","catch","error","length","className","s","map","profile_path","name","character","id","src","POSTER_IMG_URL","alt","BASE_URL","API_KEY","getTrendingFilms","axios","data","getFilmsByName","filmName","getFilmsByID","filmId","getGenresName","genres","join","getReviewsOfFilm"],"sourceRoot":""}