{"version":3,"file":"static/js/135.50017841.chunk.js","mappings":"mPACA,EAA0B,8BAA1B,EAA+D,2BAA/D,EAAmG,6BAAnG,EAA2I,+BAA3I,EAAqL,+BAArL,EAA+N,+BAA/N,EAAsQ,4BAAtQ,EAA2S,6BAA3S,EAAgV,4BAAhV,EAAmX,2BAAnX,EAAqZ,2BAArZ,EAA6b,iCAA7b,EAAoe,0B,SCc9dA,EAAqB,SAAC,GAC1B,OAD2C,EAAfC,SACb,UAAMC,EAAN,YAAgBA,GAAaA,CAC7C,EAoFD,MAlFA,SAAsBC,GAAQ,IAAD,QACrBC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,IAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GACzBJ,EAAQI,GACRC,QAAQC,IAAIF,EACb,GACF,GAAE,CAACR,IAECG,EAAL,CAGA,IAAQQ,EACNR,EADMQ,YAAaC,EACnBT,EADmBS,MAAOC,EAC1BV,EAD0BU,SAAUC,EACpCX,EADoCW,OAAQC,EAC5CZ,EAD4CY,aAAcC,EAC1Db,EAD0Da,aAG5D,OACE,2BACE,UAACC,EAAA,EAAD,YACE,SAAC,KAAD,CAAMC,GAAE,oBAAEpB,EAASqB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAKC,UAAWzB,EAAlD,0BAGA,iBAAKyB,UAAWzB,EAAhB,WACE,gBAAKyB,UAAWzB,EAAhB,UACE,gBACEyB,UAAWzB,EACX0B,MAAM,MACNC,IAAG,UAAKC,EAAAA,IAAL,OAAsBb,GACzBc,IAAKb,OAGT,4BACE,gBAAIS,UAAWzB,EAAf,UACGgB,EADH,KACYG,EAAaW,MAAM,EAAG,GADlC,QAGA,eAAGL,UAAWzB,EAAd,WACE,iBAAMyB,UAAWzB,EAAjB,yBAA4C,KAC3B,GAAfoB,GAAmBW,QAAQ,GAF/B,QAIA,eAAGN,UAAWzB,EAAd,WACE,iBAAMyB,UAAWzB,EAAjB,yBACCiB,MAEH,eAAGQ,UAAWzB,EAAd,WACE,iBAAMyB,UAAWzB,EAAjB,uBACCgC,EAAAA,EAAAA,IAAcd,aAIrB,iBAAKO,UAAWzB,EAAhB,WACE,eAAIyB,UAAWzB,EAAf,qCACA,gBAAIyB,UAAWzB,EAAf,WACE,eAAIyB,UAAWzB,EAAf,UACE,SAAC,KAAD,CACEyB,UAAW3B,EACXwB,GAAG,OACHC,MAAO,UAAArB,EAASqB,aAAT,SAAgBC,KAAOtB,EAASqB,MAAQ,KAHjD,qBAQF,eAAIE,UAAWzB,EAAf,UACE,SAAC,KAAD,CACEyB,UAAW3B,EACXwB,GAAG,UACHC,MAAO,UAAArB,EAASqB,aAAT,SAAgBC,KAAOtB,EAASqB,MAAQ,KAHjD,8BAUN,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UA7DP,CAkEF,C,4PCjGKC,EAAW,gCACXC,EAAU,mCACHR,EAAiB,kCAGjBS,EAAgB,mCAAG,+GAELC,IAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAHf,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5B1B,QAAQ2B,MAAM,6BAPc,yDAAH,qDAWhBC,EAAc,mCAAG,WAAMC,GAAN,kGAEHJ,IAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BM,IAH5B,uBAElBH,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1B1B,QAAQ2B,MAAM,6BAPY,yDAAH,sDAWd9B,EAAY,mCAAG,WAAMiC,GAAN,kGAEDL,IAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACkBP,IAHjB,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxB1B,QAAQ2B,MAAM,6BAPU,yDAAH,sDAsBZR,EAAgB,SAAAd,GAC3B,OAAKA,EAGaA,EAAO0B,KAAI,qBAAGC,IAAH,IACVC,KAAK,MAHf,EAIV,EAEYC,EAAa,mCAAG,WAAMJ,GAAN,kGAEFL,IAAAA,IAAA,UAAaH,EAAb,iBAA8BQ,EAA9B,4BAAwDP,IAFtD,uBAEjBG,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzB1B,QAAQ2B,MAAM,6BALW,yDAAH,sDASbQ,EAAgB,mCAAG,WAAOL,GAAP,kGAELL,IAAAA,IAAA,UAAaH,EAAb,iBAA8BQ,EAA9B,4BAAwDP,IAFnD,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,gCAK5B1B,QAAQ2B,MAAM,6BALc,yDAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"link\":\"MovieDetails_link__U+v+7\",\"active\":\"MovieDetails_active__uPNdW\",\"linkBack\":\"MovieDetails_linkBack__CKjEq\",\"linkList\":\"MovieDetails_linkList__767FF\",\"linkItem\":\"MovieDetails_linkItem__QXhuP\",\"inner\":\"MovieDetails_inner__TSx+o\",\"poster\":\"MovieDetails_poster__yO7gD\",\"title\":\"MovieDetails_title__cUGs9\",\"info\":\"MovieDetails_info__qv2SI\",\"text\":\"MovieDetails_text__RHcc4\",\"additional\":\"MovieDetails_additional__+f3rh\",\"box\":\"MovieDetails_box__0AyGO\"};","import { Suspense } from 'react';\nimport Container from 'components/Container';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getFilmsByID, getGenresName } from '../../services/api';\nimport { useEffect, useState } from 'react';\nimport s from './MovieDetails.module.css';\n\nimport { POSTER_IMG_URL } from '../../services/api';\n\nconst getActiveClassName = ({ isActive }) => {\n  return isActive ? `${s.link} ${s.active}` : s.link;\n};\n\nfunction MovieDetails(props) {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [film, setFilm] = useState(null);\n\n  useEffect(() => {\n    getFilmsByID(movieId).then(resp => {\n      setFilm(resp);\n      console.log(resp);\n    });\n  }, [movieId]);\n\n  if (!film) {\n    return;\n  }\n  const { poster_path, title, overview, genres, release_date, vote_average } =\n    film;\n\n  return (\n    <main>\n      <Container>\n        <Link to={location.state?.from ?? '/'} className={s.linkBack}>\n          &#8592; Back\n        </Link>\n        <div className={s.wrapper}>\n          <div className={s.inner}>\n            <img\n              className={s.poster}\n              width=\"300\"\n              src={`${POSTER_IMG_URL}${poster_path}`}\n              alt={title}\n            />\n          </div>\n          <div>\n            <h1 className={s.title}>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p className={s.text}>\n              <span className={s.info}>User Score:</span>{' '}\n              {(vote_average * 10).toFixed(2)}%\n            </p>\n            <p className={s.text}>\n              <span className={s.info}> Overview: </span>\n              {overview}\n            </p>\n            <p className={s.text}>\n              <span className={s.info}>Genres: </span>\n              {getGenresName(genres)}\n            </p>\n          </div>\n        </div>\n        <div className={s.box}>\n          <h2 className={s.additional}>Additional information</h2>\n          <ul className={s.linkList}>\n            <li className={s.linkItem}>\n              <NavLink\n                className={getActiveClassName}\n                to=\"cast\"\n                state={location.state?.from ? location.state : null}\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li className={s.linkItem}>\n              <NavLink\n                className={getActiveClassName}\n                to=\"reviews\"\n                state={location.state?.from ? location.state : null}\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a4a0d478f5a66be1befa7af60710d15f';\nexport const POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport const getTrendingFilms = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByName = async filmName => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${filmName}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByID = async filmId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenres = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}genre/movie/list?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenresName = genres => {\n  if (!genres) {\n    return '';\n  }\n  let genresNames = genres.map(({ name }) => name);\n  return genresNames.join(', ');\n};\n\nexport const getCastOfFilm = async filmId => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getReviewsOfFilm = async (filmId)=>{\n  try {\n    const { data } = await axios.get(`${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n}\n"],"names":["getActiveClassName","isActive","s","props","location","useLocation","movieId","useParams","useState","film","setFilm","useEffect","getFilmsByID","then","resp","console","log","poster_path","title","overview","genres","release_date","vote_average","Container","to","state","from","className","width","src","POSTER_IMG_URL","alt","slice","toFixed","getGenresName","Suspense","fallback","BASE_URL","API_KEY","getTrendingFilms","axios","data","error","getFilmsByName","filmName","filmId","map","name","join","getCastOfFilm","getReviewsOfFilm"],"sourceRoot":""}