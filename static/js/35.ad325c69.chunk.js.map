{"version":3,"file":"static/js/35.ad325c69.chunk.js","mappings":"sKACA,MAA0B,8BCA1B,EAAgC,iCAAhC,EAAkF,kCAAlF,EAAwM,wCAAxM,EAAuP,wBAAvP,EAAuR,yB,uCC8BvR,MAxBA,YAAyD,IAA7BA,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YACjCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAQC,GAAE,kBAAaP,GAAQQ,MAAO,CAACC,KAAMN,GAA9D,UACE,iBAAKE,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXI,IAAG,UAAKC,EAAAA,GAAL,YAAuBT,GAC1BU,IAAKX,KAEP,cAAGI,UAAWC,EAAd,SAAwBL,UAKjC,ECOD,MA1BA,YAAkC,IAAVY,EAAS,EAATA,MACtB,OACE,eAAIR,UAAWC,EAAf,SACGO,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAId,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACT,SAACc,EAAD,CAEEhB,KAAQe,EACRd,MAAOA,EACPC,YAAaA,GAHRa,EAFE,KAUhB,C,mEChBD,EAA0B,yB,SCkB1B,MAfA,YAAqC,IAAnBE,EAAkB,EAAlBA,SAAUhB,EAAQ,EAARA,MAC1B,OACE,qBAASI,UAAWC,EAApB,UACGL,IAAS,wBAAKA,IACdgB,IAGN,C,4ICqBD,MAxBA,SAAkBC,GAChB,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,MACCC,MAAK,gBAAEC,EAAF,EAAEA,QAAF,OAAcJ,EAAiBI,EAA/B,IACLC,MAAMC,QAAQC,MAClB,GAAE,KAGD,2BACI,SAACC,EAAA,EAAD,CAAS5B,MAAM,kBAAf,UACA,SAAC6B,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAclB,MAAOO,SAM9B,C,4PC1BKY,EAAW,gCACXC,EAAU,mCACHtB,EAAiB,kCAGjBY,EAAgB,mCAAG,+GAELW,IAAAA,IAAA,UAClBF,EADkB,sCACoBC,IAHf,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BR,QAAQC,MAAM,6BAPc,yDAAH,qDAWhBQ,EAAc,mCAAG,WAAMC,GAAN,kGAEHH,IAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,kBAC+BI,IAH5B,uBAElBF,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BR,QAAQC,MAAM,6BAPY,yDAAH,sDAWdU,EAAY,mCAAG,WAAMC,GAAN,kGAEDL,IAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,oBACkBN,IAHjB,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBR,QAAQC,MAAM,6BAPU,yDAAH,sDAsBZY,EAAgB,SAAAC,GAC3B,OAAKA,EAGaA,EAAO3B,KAAI,qBAAG4B,IAAH,IACVC,KAAK,MAHf,EAIV,EAEYC,EAAa,mCAAG,WAAML,GAAN,kGAEFL,IAAAA,IAAA,UAAaF,EAAb,iBAA8BO,EAA9B,4BAAwDN,IAFtD,uBAEjBE,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzBR,QAAQC,MAAM,6BALW,yDAAH,sDASbiB,EAAgB,mCAAG,WAAON,GAAP,kGAELL,IAAAA,IAAA,UAAaF,EAAb,iBAA8BO,EAA9B,4BAAwDN,IAFnD,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,gCAK5BR,QAAQC,MAAM,6BALc,yDAAH,qD","sources":["webpack://react-homework-template/./src/MovieGallery/MovieGallery.module.css?7e83","webpack://react-homework-template/./src/MovieGallery/MovieItem/MovieItem.module.css?bb1c","MovieGallery/MovieItem/MovieItem.jsx","MovieGallery/MovieGallery.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"MovieGallery_gallery__HqImj\"};","// extracted by mini-css-extract-plugin\nexport default {\"gallery__item\":\"MovieItem_gallery__item__kvf7-\",\"gallery__image\":\"MovieItem_gallery__image__yEhIF\",\"gallery__largeImage\":\"MovieItem_gallery__largeImage__aAz06\",\"gallery__itemWrapper\":\"MovieItem_gallery__itemWrapper__sgyf9\",\"link\":\"MovieItem_link__UsxDW\",\"title\":\"MovieItem_title__NWfbf\"};","import PropTypes from 'prop-types';\nimport s from './MovieItem.module.css';\nimport { POSTER_IMG_URL } from '../../services/api';\nimport { Link, useLocation } from 'react-router-dom';\n\n\n\nfunction ImageGalleryItem({ link, title, poster_path }) {\n  const location = useLocation();\n  return (\n    <li className={s.gallery__item}>\n      <Link className={s.link} to={`/movies/${link}`} state={{from: location}}>\n        <div className={s.gallery__itemWrapper}>\n          <img\n            className={s.gallery__image}\n            src={`${POSTER_IMG_URL}/${poster_path}`}\n            alt={title}\n          />\n          <p className={s.title}>{title}</p>\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  link: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './MovieGallery.module.css';\nimport MovieItem from './MovieItem';\n\nfunction MovieGallery({ items }) {\n  return (\n    <ul className={s.gallery}>\n      {items.map(({ id, title, poster_path }) => (\n        <MovieItem\n          key={id}\n          link = {id}\n          title={title}\n          poster_path={poster_path}\n        />\n      ))}\n    </ul>\n  );\n}\n\nMovieGallery.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n\n    })\n  ),\n};\n\nexport default MovieGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport s from './Section.module.css';\n\nfunction Section({children, title}) {\n  return (\n    <section className={s.section}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  )\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n\n}\n\nexport default Section;\n","import React, { useState, useEffect } from 'react'\nimport Container from 'components/Container'\nimport Section from '../../components/Section';\nimport {getTrendingFilms} from '../../services/api';\nimport MovieGallery from 'MovieGallery';\n\n\n\nfunction HomePage(props) {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n\n  useEffect(() =>{\n\n      getTrendingFilms()\n      .then(({results})=> setTrendingFilms(results))\n      .catch(console.error)\n  }, [])\n\n  return (\n    <main>\n        <Section title='Trending movies'>\n        <Container>\n          <MovieGallery items={trendingFilms}/>\n        </Container>\n        </Section>\n\n    </main>\n  )\n}\n\n\n\nexport default HomePage\n\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a4a0d478f5a66be1befa7af60710d15f';\nexport const POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport const getTrendingFilms = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByName = async filmName => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${filmName}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getFilmsByID = async filmId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenres = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}genre/movie/list?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getGenresName = genres => {\n  if (!genres) {\n    return '';\n  }\n  let genresNames = genres.map(({ name }) => name);\n  return genresNames.join(', ');\n};\n\nexport const getCastOfFilm = async filmId => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n};\n\nexport const getReviewsOfFilm = async (filmId)=>{\n  try {\n    const { data } = await axios.get(`${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something went wrong' + error);\n  }\n}\n"],"names":["link","title","poster_path","location","useLocation","className","s","to","state","from","src","POSTER_IMG_URL","alt","items","map","id","MovieItem","children","props","useState","trendingFilms","setTrendingFilms","useEffect","getTrendingFilms","then","results","catch","console","error","Section","Container","MovieGallery","BASE_URL","API_KEY","axios","data","getFilmsByName","filmName","getFilmsByID","filmId","getGenresName","genres","name","join","getCastOfFilm","getReviewsOfFilm"],"sourceRoot":""}